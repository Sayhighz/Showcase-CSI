# uploads.yaml - เส้นทางสำหรับการอัปโหลดไฟล์
paths:
  /api/upload/profile-image:
    post:
      tags:
        - Upload
      summary: Upload profile image
      description: Upload a profile image for the current user
      operationId: uploadProfileImage
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profileImage:
                  type: string
                  format: binary
              required:
                - profileImage
      responses:
        '200':
          description: Profile image uploaded successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          file:
                            type: object
                            properties:
                              filename:
                                type: string
                                example: profile-abc123.jpg
                              originalname:
                                type: string
                                example: profile.jpg
                              path:
                                type: string
                                example: uploads/profiles/profile-abc123.jpg
                              url:
                                type: string
                                example: http://localhost:5000/uploads/profiles/profile-abc123.jpg
                              size:
                                type: integer
                                example: 1048576
                              formattedSize:
                                type: string
                                example: 1 MB
                              mimetype:
                                type: string
                                example: image/jpeg
                              fileType:
                                type: string
                                example: image
        '400':
          description: File upload error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/upload/images:
    post:
      tags:
        - Upload
      summary: Upload multiple images
      description: Upload multiple images
      operationId: uploadImages
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  maxItems: 5
              required:
                - images
      responses:
        '200':
          description: Images uploaded successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                filename:
                                  type: string
                                originalname:
                                  type: string
                                path:
                                  type: string
                                url:
                                  type: string
                                size:
                                  type: integer
                                formattedSize:
                                  type: string
                                mimetype:
                                  type: string
                                fileType:
                                  type: string
        '400':
          description: File upload error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/upload/video:
    post:
      tags:
        - Upload
      summary: Upload video
      description: Upload a video file
      operationId: uploadVideo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                video:
                  type: string
                  format: binary
              required:
                - video
      responses:
        '200':
          description: Video uploaded successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          file:
                            type: object
                            properties:
                              filename:
                                type: string
                              originalname:
                                type: string
                              path:
                                type: string
                              url:
                                type: string
                              size:
                                type: integer
                              formattedSize:
                                type: string
                              mimetype:
                                type: string
                              fileType:
                                type: string
                                example: video
        '400':
          description: File upload error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/upload/documents:
    post:
      tags:
        - Upload
      summary: Upload documents
      description: Upload multiple document files
      operationId: uploadDocuments
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  maxItems: 3
              required:
                - documents
      responses:
        '200':
          description: Documents uploaded successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                filename:
                                  type: string
                                originalname:
                                  type: string
                                path:
                                  type: string
                                url:
                                  type: string
                                size:
                                  type: integer
                                formattedSize:
                                  type: string
                                mimetype:
                                  type: string
                                fileType:
                                  type: string
                                  example: pdf
        '400':
          description: File upload error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/upload/files:
    post:
      tags:
        - Upload
      summary: Upload generic files
      description: Upload multiple files of various types
      operationId: uploadFiles
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  maxItems: 5
                project_id:
                  type: integer
                  description: Optional project ID to associate files with
              required:
                - files
      responses:
        '200':
          description: Files uploaded successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                filename:
                                  type: string
                                originalname:
                                  type: string
                                path:
                                  type: string
                                url:
                                  type: string
                                size:
                                  type: integer
                                formattedSize:
                                  type: string
                                mimetype:
                                  type: string
                                fileType:
                                  type: string
        '400':
          description: File upload error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/upload/multiple:
    post:
      tags:
        - Upload
      summary: Upload mixed files
      description: Upload multiple files of different types
      operationId: uploadMultiple
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  maxItems: 5
                video:
                  type: string
                  format: binary
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  maxItems: 3
                project_id:
                  type: integer
                  description: Optional project ID to associate files with
      responses:
        '200':
          description: Multiple files uploaded successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          files:
                            type: object
                            properties:
                              images:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    filename:
                                      type: string
                                    originalname:
                                      type: string
                                    path:
                                      type: string
                                    url:
                                      type: string
                                    size:
                                      type: integer
                                    formattedSize:
                                      type: string
                                    mimetype:
                                      type: string
                                    fileType:
                                      type: string
                              video:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    filename:
                                      type: string
                                    originalname:
                                      type: string
                                    path:
                                      type: string
                                    url:
                                      type: string
                                    size:
                                      type: integer
                                    formattedSize:
                                      type: string
                                    mimetype:
                                      type: string
                                    fileType:
                                      type: string
                              documents:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    filename:
                                      type: string
                                    originalname:
                                      type: string
                                    path:
                                      type: string
                                    url:
                                      type: string
                                    size:
                                      type: integer
                                    formattedSize:
                                      type: string
                                    mimetype:
                                      type: string
                                    fileType:
                                      type: string
        '400':
          description: File upload error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/upload/delete:
    delete:
      tags:
        - Upload
      summary: Delete file
      description: Delete a file from the server
      operationId: deleteFile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  example: uploads/images/project-xyz789.jpg
                file_id:
                  type: integer
                  description: Optional database file ID
              required:
                - filePath
      responses:
        '200':
          description: File deleted successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          filePath:
                            type: string
                            example: uploads/images/project-xyz789.jpg
        '400':
          description: Invalid file path
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: File not found or could not be deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/upload/storage-status:
    get:
      tags:
        - Upload
      summary: Get storage status
      description: Get storage usage statistics
      operationId: getStorageStatus
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Storage status retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          totalSize:
                            type: integer
                            example: 1073741824
                          totalSizeMB:
                            type: number
                            example: 1024
                          totalFileCount:
                            type: integer
                            example: 100
                          categories:
                            type: object
                            additionalProperties:
                              type: object
                              properties:
                                size:
                                  type: integer
                                  example: 1073741824
                                sizeMB:
                                  type: number
                                  example: 1024
                                fileCount:
                                  type: integer
                                  example: 100
                                  